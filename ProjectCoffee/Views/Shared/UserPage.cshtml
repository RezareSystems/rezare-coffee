@using ProjectCoffee.Services;
@model ProjectCoffee.Controllers.UserViewModel

<div class="user-container">
    <h2 style="display: inline">
        Hey
        <span id="editable-header" style="display: inline" >@(Model.User.FirstName)</span>
        <input id="hiding-textbox" type="text" style="display: none;" />
    </h2>
            
    <h3>
        I've got you down for 
        <span id="editable-drink" class="secret-click">@if (Model.User.Drink == null)
        {@: nothing
        }
        else{@: a @Model.User.Drink.Name
        }</span>
        <div style="display:none" id="drink-selection-holder">
            @Html.DropDownListFor(m => m.User.DrinkId, new SelectList(Model.CoffeeList, dataValueField: "Id", dataTextField: "Name"), htmlAttributes: new { @id = "coffee-select", @class = "coffee-dropdown", style = "width: 250px;" })
        </div>
        and 

        
        @if (Model.User.CoffeeOptions != null && Model.User.CoffeeOptions.Where(o => o.Value > 0).Any())
        {
            @:<span data-toggle="tooltip" title="@Model.User.GetStringCoffeeOptions" class="secret-click coffee-options">you've changed it a bit.</span>
        }
        else
        {
            @:<span class="secret-click coffee-options">there's nothing special about it.</span>
        }
        <div class="dropdown" id="the-dropdown" style="display:none">
            <button type="button" id="option-button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">Set Options &nbsp;<span class="caret"></span></button>
            <ul class="dropdown-menu" id="options-dropdown">
                <li class="non-closable">
                    <div class="container" ng-app="optionsApp" ng-controller="optionsCtrl">
                        <table>
                            <tr ng-repeat="x in options">
                                <td><a href="javascript:void(0)" ng-click="minusOptions(x.NameBehind)"><span class="glyphicon glyphicon-minus"></span></a></td>
                                <td>&nbsp;</td>
                                <td>
                                    {{ x.Count }}
                                </td>
                                <td>&nbsp;</td>
                                <td>
                                    {{ x.Name }}
                                </td>
                                <td>&nbsp;</td>
                                <td><a href="javascript:void(0)" ng-click="addOptions(x.NameBehind)"><span class="glyphicon glyphicon-plus"></span></a></td>
                            </tr>
                        </table>
                    </div>
                </li>
            </ul>
        </div>

    </h3>
    <h4>
        If you haven't logged in 
        @if (Model.Date.Date == DateTime.Now.Date)
        {
            <span>today</span>
        }
        else
        {
            <span>on @Model.Date.ToString("dddd") (the @ViewBag.ReadableDate) </span>
        }
        by 9:30am you 
        @if (Model.User.WillBeThere)
        {
            <span id="attending-span" class="secret-click">would still</span>
        }
        else
        {
            <span id="attending-span" class="secret-click">would not</span>
        }
        like us to order for you.
    </h4>
</div>

    @if (Model.IsAdmin)
    {
            @Html.Partial("AdminPage", Model)
    }

@section scripts {
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
<script>
    $(function () {
        $('[data-toggle="tooltip"]').tooltip();
        $("#drink-selection-holder").hide();

        $("#attending-span").click(function(){
            var span = $("#attending-span");

            if(span.html() == "would still"){
                span.html("would not");
            }else{
                span.html("would still");
            }

            saveAll();
        });

        $(".coffee-dropdown").select2();
        $(".coffee-dropdown").on("select2:select", function (e) {
            $("#drink-selection-holder").hide();
            $("#editable-drink").html($("#coffee-select :selected").text());
            $("#editable-drink").show();
            saveAll();
        });

        $('#the-dropdown').on('hide.bs.dropdown', function () {
            saveAll();
        });

        $("#User_WillBeThere").change(function() {
            saveAll();
        });

        $('.non-closable').on('focus click blur', function (e) { e.stopPropagation(); })

        //$("#editable-header").click(function () {
        //    $("#editable-header").hide();
        //    $("#hiding-textbox").val($("#editable-header").text());
        //    $("#hiding-textbox").show();
        //    $("#hiding-textbox").focus();
        //});

        $("#editable-drink").click(function () {
            $("#editable-drink").hide();
            $("#drink-selection-holder").show();
        });

        
        $(".coffee-options").click(function(){
            $(".coffee-options").hide();
            $("#the-dropdown").show();
        });

        //$("#hiding-textbox").keydown(function(key){
        //    if(key.which == 13) // Enter key pressed
        //        $("#hiding-textbox").focusout();
        //});

        //$("#hiding-textbox").focusout(function () {
        //    $("#editable-header").show();
        //    $("#hiding-textbox").hide();
        //    if ($("#hiding-textbox").val() != "") {
        //        $("#editable-header").text($("#hiding-textbox").val());
        //        saveAll();
        //    }
        //});

        $("#attendlabel").click(function () {
            var checkbox = $("#User_WillBeThere");
            checkbox.prop("checked", !checkbox.prop("checked"));
            saveAll();
        });

        $("html").on("hide.bs.dropdown", function () {
            $(".coffee-options").show();
            $("#the-dropdown").hide();

            var hasoptions = false;
            for(var i = 0; i < options.length; i++)
                hasoptions = hasoptions | options[i].Count > 0;

            if(hasoptions){
                $(".coffee-options").html("you've changed it a bit.");
            }else{
                $(".coffee-options").html("there's nothing special about it.");
            }

            $(".coffee-options").attr("data-original-title", getOptionsString());
            $(".coffee-options").attr("title", getOptionsString());

            saveAll();
        });

    });

    var getOptionsString = function(){
        var string = "";

        for(var i = 0; i < options.length; i++){
            if(options[i].Count > 0){
                string += " " + options[i].Name + " - " + options[i].Count + ",";
            }
        }

        return string.length > 1 ? string.slice(1, string.length -1) : "";
    }

    var saveAll = function () {
        // TODO AJAX CALL to save all data
        var drinkID = $("#coffee-select").val();
        optionsdata = options;
        var checked = $("#attending-span").html() == "would";
        var name = $("#editable-header").html();
        
        var sendData = {
            DrinkID: drinkID,
            Options: optionsdata,
            IsHere: checked,
            Name: name,
        };

        $.post('@Url.Action("SaveChanges", "User", null, Request.Url.Scheme)', {data: JSON.stringify(sendData)}, function() {

        }, "json");

    };

    // This angular controller is only for the dropdown
    var app = angular.module('optionsApp', []);
    app.controller('optionsCtrl', function ($scope) {

        options = [];
        var jsObject = @Html.Raw(Json.Encode(Model.User.CoffeeOptions));

        console.log(jsObject);

        for(var i = 0; i < jsObject.length; i++) {
            options.push({ NameBehind: jsObject[i].Key, Name: jsObject[i].Key.replace(/([A-Z])/g, ' $1').trim(), Count: jsObject[i].Value })
        }

        console.log(options);

        $scope.options = options;
        


        $scope.addOptions = function (nameBehind) {
                var found = $scope.options.find(function (element) {
                    if (element.NameBehind == nameBehind) {
                        return element;
                    }
                });

                if (found.Count < 2) {
                    found.Count = found.Count + 1;
                }
            };

        $scope.minusOptions = function (nameBehind) {
                var found = $scope.options.find(function (element) {
                    if (element.NameBehind == nameBehind) {
                        return element;
                    }
                });

                if (found.Count > 0) {
                    found.Count = found.Count - 1;
                }
            };
    });


</script>   

    @if (new ActiveDirectoryService().IsAdmin(Model.User))
    {
        <script>

            $(function () {
                $("#edit-date").click(function () {
                    $("#edit-date").hide();
                    $("#meeting-container").show();
                });

                $("#confirm-popup").dialog({
                    autoOpen: false,
                    title: "Are you sure? Like really sure?",
                    modal: true
                });

                $("#generate-report-button").click(function(){
                    $("#confirm-popup").dialog("open");
                });

                $("#confirm-button").click(function() {
                    Generate_Report_Actions();
                    $("#confirm-button").unbind("click");
                    $("#confirm-button").html("Please refresh the page.");
                    $("#confirm-button").css("cursor", "not-allowed");
                })

                $("#save-button").click(function(){
                    $.get("@Url.Action("GetAdminDate", "Home", null, Request.Url.Scheme)", { date: $("#meeting").val() }, function(data){
                        $("#edit-date").html(data);
                        $("#edit-date").show();
                        $("#meeting-container").hide();
                    });

                });
            });
            

            function Generate_Report_Actions()
            {
                var tab = window.open("@Url.Action("Report", "Home", null, Request.Url.Scheme)?confirmDate=@Model.Date.ToString("yyyy-MM-dd")&nextMeeting=" + $("#meeting").val(), "_blank");
                if(tab){
                    tab.focus();
                    location.reload();
                }
                else{
                    alert("Please enable popups.");
                }
            }
        </script>
    }
}

